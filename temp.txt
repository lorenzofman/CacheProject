sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./simplesim-3.0/sim-cache -cache:il1 il1:16:32:2:l -cache:il2 none -cache:dl1 dl1:16:32:2:l -cache:dl2 none -max:inst 134217728 -redir:sim temp.txt Benchmarks/mm.ss 

sim: simulation started @ Tue Jul  2 14:12:20 2019, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim         temp.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst           134217728 # maximum number of inst's to execute
-cache:dl1       dl1:16:32:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl2               none # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:16:32:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2               none # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting functional simulation w/ caches **
warning: invalid/unimplemented syscall 0, PC=0x00000000, RA=0x00000000, winging it
warning: invalid/unimplemented syscall 0, PC=0x00000000, RA=0x00000000, winging it
warning: invalid/unimplemented syscall 0, PC=0x00000000, RA=0x00000000, winging it
warning: invalid/unimplemented syscall 0, PC=0x00000000, RA=0x00000000, winging it
warning: invalid/unimplemented syscall 0, PC=0x00000000, RA=0x00000000, winging it
warning: invalid/unimplemented syscall 1152921504606846976, PC=0x00000000, RA=0x00000000, winging it
wa